//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerObject
{
    float4x4 world;                     // Offset:    0, size:   64
    float4x4 view;                      // Offset:   64, size:   64
    float4x4 worldViewProjection;       // Offset:  128, size:   64
    float4  materialAmbientColor;       // Offset:  192, size:   16
    float4  materialDiffuseColor;       // Offset:  208, size:   16
}

cbuffer cbPerFrame
{
    float3  lightDir;                   // Offset:    0, size:   12
    float   time;                       // Offset:   12, size:    4
    float4  lightDiffuse;               // Offset:   16, size:   16
}

//
// 2 local object(s)
//
Texture2D diffuseTexture;
SamplerState samLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 RenderScene
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 world;                    // Offset:    0 Size:    64
                //   float4x4 view;                     // Offset:   64 Size:    64 [unused]
                //   float4x4 worldViewProjection;      // Offset:  128 Size:    64
                //   float4 materialAmbientColor;       // Offset:  192 Size:    16
                //   float4 materialDiffuseColor;       // Offset:  208 Size:    16
                //
                // }
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float3 lightDir;                   // Offset:    0 Size:    12
                //   float time;                        // Offset:   12 Size:     4 [unused]
                //   float4 lightDiffuse;               // Offset:   16 Size:    16
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                // cbPerFrame                        cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyzw        0     NONE   float   xyzw
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // COLOR                    0   xyzw        1     NONE   float   xyzw
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_constantbuffer cb1[2], immediateIndexed
                dcl_input v0.xyzw
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyzw
                dcl_output o2.xy
                dcl_temps 3
                //
                // Initial variable locations:
                //   v0.x <- i.Position.x; v0.y <- i.Position.y; v0.z <- i.Position.z; v0.w <- i.Position.w; 
                //   v1.x <- i.Normal.x; v1.y <- i.Normal.y; v1.z <- i.Normal.z; 
                //   v2.x <- i.TextureUV.x; v2.y <- i.TextureUV.y; 
                //   o2.x <- <VShader return value>.TextureUV.x; o2.y <- <VShader return value>.TextureUV.y; 
                //   o1.x <- <VShader return value>.Diffuse.x; o1.y <- <VShader return value>.Diffuse.y; o1.z <- <VShader return value>.Diffuse.z; o1.w <- <VShader return value>.Diffuse.w; 
                //   o0.x <- <VShader return value>.Position.x; o0.y <- <VShader return value>.Position.y; o0.z <- <VShader return value>.Position.z; o0.w <- <VShader return value>.Position.w
                //
                #line 46 "D:\SpieleEntwicklung\DirectX\VincentJannik\Code\Beyond-Imagination\Beyond_Imagination\effect.fx"
                dp4 r0.x, v0.xyzw, cb0[8].xyzw  // r0.x <- o.Position.x
                dp4 r0.y, v0.xyzw, cb0[9].xyzw  // r0.y <- o.Position.y
                dp4 r0.z, v0.xyzw, cb0[10].xyzw  // r0.z <- o.Position.z
                dp4 r0.w, v0.xyzw, cb0[11].xyzw  // r0.w <- o.Position.w
                dp3 r1.x, v1.xyzx, cb0[0].xyzx
                dp3 r1.y, v1.xyzx, cb0[1].xyzx
                dp3 r1.z, v1.xyzx, cb0[2].xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- normalWorldSpace.x; r1.y <- normalWorldSpace.y; r1.z <- normalWorldSpace.z
                
                #line 51
                mul r2.xyz, cb0[13].xyzx, cb1[1].xyzx
                itof r1.w, l(0)
                dp3 r1.x, r1.xyzx, cb1[0].xyzx
                max r1.x, r1.x, r1.w
                mul r1.xyz, r1.xxxx, r2.xyzx
                add r1.xyz, r1.xyzx, cb0[12].xyzx  // r1.x <- o.Diffuse.x; r1.y <- o.Diffuse.y; r1.z <- o.Diffuse.z
                mov r1.w, l(1.000000)  // r1.w <- o.Diffuse.w
                
                #line 55
                mov r2.xy, v2.xyxx  // r2.x <- o.TextureUV.x; r2.y <- o.TextureUV.y
                mov o0.xyzw, r0.xyzw
                mov o1.xyz, r1.xyzx
                mov o1.w, r1.w
                mov o2.xy, r2.xyxx
                ret 
                // Approximately 23 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // diffuseTexture                    texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // COLOR                    0   xyzw        1     NONE   float   xyzw
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_TARGET                0   xyzw        0   TARGET   float   xyzw
                //
                ps_4_0
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyzw
                dcl_input_ps linear v2.xy
                dcl_output o0.xyzw
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- o.Position.x; v0.y <- o.Position.y; v0.z <- o.Position.z; v0.w <- o.Position.w; 
                //   v1.x <- o.Diffuse.x; v1.y <- o.Diffuse.y; v1.z <- o.Diffuse.z; v1.w <- o.Diffuse.w; 
                //   v2.x <- o.TextureUV.x; v2.y <- o.TextureUV.y; 
                //   o0.x <- <PShader return value>.x; o0.y <- <PShader return value>.y; o0.z <- <PShader return value>.z; o0.w <- <PShader return value>.w
                //
                #line 63 "D:\SpieleEntwicklung\DirectX\VincentJannik\Code\Beyond-Imagination\Beyond_Imagination\effect.fx"
                sample r0.xyzw, v2.xyxx, t0.xyzw, s0
                mul o0.xyzw, r0.xyzw, v1.xyzw
                ret 
                // Approximately 3 instruction slots used
                            
            };
        }

    }

}

