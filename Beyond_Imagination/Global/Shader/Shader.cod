//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldViewProjection;      // Offset:   64, size:   64
    float4x4 gWorldInvTranspose;        // Offset:  128, size:   64
    Material gMaterial;                 // Offset:  192, size:   48
}

cbuffer cbPerFrame
{
    DirectionalLight gDirectionalLight; // Offset:    0, size:   60
    PointLight gPointLight;             // Offset:   64, size:   76
    SpotLight gSpotLight;               // Offset:  144, size:   92
    float3  gEyePosition;               // Offset:  240, size:   12
}

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 PositionColor
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:  128 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  192
                //       float4 diffuse;                // Offset:  208
                //       float4 specular;               // Offset:  224
                //
                //   } gMaterial;                       // Offset:  192 Size:    48 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyzw        0     NONE  float   xyzw
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyzw        1     NONE  float   xyzw
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[11], immediateIndexed
                dcl_input v0.xyzw
                dcl_input v1.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyzw
                dcl_output o2.xyz
                dcl_temps 3
                
                #line 37 "D:\SpieleEntwicklung\DirectX\VincentJannik\Code\Beyond-Imagination\Beyond_Imagination\Global\Shader\Shader.fx"
                dp4 r0.x, v0.xyzw, cb0[0].xyzw  // output<4:NaN:Inf>
                dp4 r0.y, v0.xyzw, cb0[1].xyzw  // output<5:NaN:Inf>
                dp4 r0.z, v0.xyzw, cb0[2].xyzw  // output<6:NaN:Inf>
                dp4 r0.w, v0.xyzw, cb0[3].xyzw  // output<7:NaN:Inf>
                dp3 r1.x, v1.xyzx, cb0[8].xyzx  // output<8:NaN:Inf>
                dp3 r1.y, v1.xyzx, cb0[9].xyzx  // output<9:NaN:Inf>
                dp3 r1.z, v1.xyzx, cb0[10].xyzx  // output<10:NaN:Inf>
                
                #line 41
                dp4 r2.x, v0.xyzw, cb0[4].xyzw  // output<0:NaN:Inf>
                dp4 r2.y, v0.xyzw, cb0[5].xyzw  // output<1:NaN:Inf>
                dp4 r2.z, v0.xyzw, cb0[6].xyzw  // output<2:NaN:Inf>
                dp4 r2.w, v0.xyzw, cb0[7].xyzw  // output<3:NaN:Inf>
                mov o0.xyzw, r2.xyzw  // VShader<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyzw, r0.xyzw  // VShader<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf,7:NaN:Inf>
                mov o2.xyz, r1.xyzx  // VShader<8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                ret 
                // Approximately 15 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProjection;     // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:  128 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  192
                //       float4 diffuse;                // Offset:  208
                //       float4 specular;               // Offset:  224
                //
                //   } gMaterial;                       // Offset:  192 Size:    48
                //
                // }
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 ambient;                // Offset:    0
                //       float4 diffuse;                // Offset:   16
                //       float4 specular;               // Offset:   32
                //       float3 direction;              // Offset:   48
                //
                //   } gDirectionalLight;               // Offset:    0 Size:    60
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 ambient;                // Offset:   64
                //       float4 diffuse;                // Offset:   80
                //       float4 specular;               // Offset:   96
                //       float3 position;               // Offset:  112
                //       float range;                   // Offset:  124
                //       float3 att;                    // Offset:  128
                //
                //   } gPointLight;                     // Offset:   64 Size:    76
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 ambient;                // Offset:  144
                //       float4 diffuse;                // Offset:  160
                //       float4 specular;               // Offset:  176
                //       float3 position;               // Offset:  192
                //       float range;                   // Offset:  204
                //       float3 direction;              // Offset:  208
                //       float spot;                    // Offset:  220
                //       float3 att;                    // Offset:  224
                //
                //   } gSpotLight;                      // Offset:  144 Size:    92
                //   float3 gEyePosition;               // Offset:  240 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                // cbPerFrame                        cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyzw        1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[15], immediateIndexed
                dcl_constantbuffer cb1[16], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 17
                
                #line 49 "D:\SpieleEntwicklung\DirectX\VincentJannik\Code\Beyond-Imagination\Beyond_Imagination\Global\Shader\Shader.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pixelIn<8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                mov r0.w, -v1.x
                add r1.xyz, r0.wwww, cb1[15].xxxx  // toEye<0:Inf,0:Inf,0:Inf>
                
                #line 60
                nop 
                mov r2.xyz, cb0[12].xyzx  // material<0,1,2>
                mov r3.xyz, cb0[13].xyzx  // material<4,5,6>
                mov r4.xyzw, cb0[14].xyzw  // material<8,9,10,11>
                mov r5.xyz, cb1[0].xyzx  // directionalLight<0,1,2>
                mov r6.xyz, cb1[1].xyzx  // directionalLight<4,5,6>
                mov r7.xyz, cb1[2].xyzx  // directionalLight<8,9,10>
                mov r8.xyz, cb1[3].xyzx  // directionalLight<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r9.xyz, r1.zzzz  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 49 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVector<0,1,2>
                
                #line 52
                mul r5.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 57
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r8.xyzx
                dp3 r2.w, r8.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r10.xyz, r0.xyzx, r2.wwww
                add r8.xyz, r8.xyzx, r10.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r8.xyzx, r9.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r4.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r8.xyz, r3.xyzx, r0.wwww
                mul r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r4.xyzx, r2.wwww
                mul r7.xyz, r7.xyzx, r8.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 57
                movc r6.xyz, r1.wwww, r6.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 60 "D:\SpieleEntwicklung\DirectX\VincentJannik\Code\Beyond-Imagination\Beyond_Imagination\Global\Shader\Shader.fx"
                mov r5.xyz, r5.xyzx  // a<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, r6.xyzx  // d<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r7.xyzx  // s<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 66
                nop 
                mov r8.xyz, cb1[4].xyzx  // pointLight<0,1,2>
                mov r10.xyz, cb1[5].xyzx  // pointLight<4,5,6>
                mov r11.xyz, cb1[6].xyzx  // pointLight<8,9,10>
                mov r12.xyz, cb1[7].xyzx  // pointLight<12,13,14>
                mov r0.w, cb1[7].w  // pointLight<15>
                mov r13.xyz, cb1[8].xyzx  // pointLight<16,17,18>
                mov r14.xyz, v1.xyzx  // position<0,1,2>
                
                #line 76 "LightHelper.fx"
                mov r14.xyz, -r14.xyzx
                add r12.xyz, r12.xyzx, r14.xyzx  // lightVector<0:Inf,1:Inf,2:Inf>
                dp3 r1.w, r12.xyzx, r12.xyzx
                sqrt r15.y, r1.w  // distance<0:NaN:Inf>
                lt r0.w, r0.w, r15.y
                
                #line 83
                if_z r0.w
                  div r12.xyz, r12.xyzx, r15.yyyy  // lightVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 86
                  mul r8.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                  dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 91
                  lt r1.w, l(0.000000), r0.w
                  mov r12.xyz, -r12.xyzx
                  dp3 r2.w, r12.xyzx, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r16.xyz, r0.xyzx, r2.wwww
                  add r12.xyz, r12.xyzx, r16.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r12.xyzx, r9.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r4.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r9.xyz, r3.xyzx, r0.wwww
                  mul r9.xyz, r10.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r4.xyzx, r2.wwww
                  mul r10.xyz, r11.xyzx, r10.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 91
                  movc r9.xyz, r1.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 101
                  mul r15.z, r15.y, r15.y
                  mov r15.x, l(1.000000)
                  dp3 r0.w, r13.xyzx, r15.xyzx
                  div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                  mul r9.xyz, r0.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r0.wwww, r10.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 83
                else 
                  mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r10.xyz, l(0,0,0,0)  // specular<0: 0f,1: 0f,2: 0f>
                endif 
                
                #line 66 "D:\SpieleEntwicklung\DirectX\VincentJannik\Code\Beyond-Imagination\Beyond_Imagination\Global\Shader\Shader.fx"
                mov r8.xyz, r8.xyzx  // a<0:Inf,1:Inf,2:Inf>
                mov r9.xyz, r9.xyzx  // d<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r10.xyz, r10.xyzx  // s<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r5.xyz, r5.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r6.xyz, r6.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r7.xyz, r7.xyzx, r10.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 72
                nop 
                mov r8.xyz, cb1[9].xyzx  // spotLight<0,1,2>
                mov r9.xyz, cb1[10].xyzx  // spotLight<4,5,6>
                mov r10.xyz, cb1[11].xyzx  // spotLight<8,9,10>
                mov r11.xyz, cb1[12].xyzx  // spotLight<12,13,14>
                mov r12.xyz, cb1[13].xyzx  // spotLight<16,17,18>
                mov r13.xyz, cb1[14].xyzx  // spotLight<20,21,22>
                mov r0.w, cb1[12].w  // spotLight<15>
                mov r1.w, cb1[13].w  // spotLight<19>
                mov r1.xyz, r1.xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 116 "LightHelper.fx"
                add r11.xyz, r14.xyzx, r11.xyzx  // lightVector<0:Inf,1:Inf,2:Inf>
                dp3 r2.w, r11.xyzx, r11.xyzx
                sqrt r14.y, r2.w  // distance<0:NaN:Inf>
                lt r0.w, r0.w, r14.y
                
                #line 122
                if_z r0.w
                  div r11.xyz, r11.xyzx, r14.yyyy  // lightVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                  dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 129
                  lt r2.w, l(0.000000), r0.w
                  mov r8.xyz, -r11.xyzx
                  dp3 r3.w, r8.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r0.xyz, r0.xyzx, r3.wwww
                  add r0.xyz, r8.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r1.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r4.w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r0.yzw, r3.xxyz, r0.wwww
                  mul r0.yzw, r9.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r4.xyzx, r0.xxxx
                  mul r1.xyz, r10.xyzx, r1.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 129
                  movc r0.xyz, r2.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r1.xyz, r2.wwww, r1.xyzx, l(0,0,0,0)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                  dp3 r0.w, r8.xyzx, r12.xyzx
                  max r0.w, r0.w, l(0.000000)
                  log r0.w, r0.w
                  mul r0.w, r0.w, r1.w
                  exp r0.w, r0.w  // spotFactor<0:NaN:Inf>
                  mul r14.z, r14.y, r14.y
                  mov r14.x, l(1.000000)
                  dp3 r1.w, r13.xyzx, r14.xyzx
                  div r1.w, r0.w, r1.w  // att<0:NaN:Inf>
                  mul r2.xyz, r0.wwww, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xyzx, r1.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r1.wwww, r1.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 122
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r0.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r1.xyz, l(0,0,0,0)  // specular<0: 0f,1: 0f,2: 0f>
                endif 
                
                #line 72 "D:\SpieleEntwicklung\DirectX\VincentJannik\Code\Beyond-Imagination\Beyond_Imagination\Global\Shader\Shader.fx"
                mov r2.xyz, r2.xyzx  // a<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // d<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // s<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r7.xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // lightColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.w, cb0[13].w  // lightColor<3>
                mov o0.xyz, r0.xyzx  // PShader<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PShader<3>
                ret 
                // Approximately 159 instruction slots used
                            
            };
        }

    }

}

